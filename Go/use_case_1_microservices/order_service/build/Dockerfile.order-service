# Use the official golang image as a builder stage
FROM golang:1.18-alpine as builder

# Set the current working directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN go build -o order_service ./cmd/main.go

# Final stage: Use a smaller base image
FROM alpine:latest

# Set the working directory to /app
WORKDIR /app

# Copy the pre-built binary from the builder stage
COPY --from=builder /app/order_service .

# Expose port 8080 to the outside world
EXPOSE 8080

# Command to run the executable
CMD ["./order_service"]